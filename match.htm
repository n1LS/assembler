<html>

<head>
    <link href='https://schickt.de/font/px8x8.css' rel='stylesheet'>
    <link rel="stylesheet" type="text/css" href="style/style.css" media="screen" />

    <style>
        #log {
            overflow: scroll;
            height: calc(100% - 16px);
        }
    </style>

    <script src='rc-zeus.js'></script>
    <script src='rc-core.js'></script>
    <script src='rc-math.js'></script>
    <script src='rc-constants.js'></script>
    <script src='rc-address-modes.js'></script>
    <script src='rc-preprocessor.js'></script>
    <script src='rc-assembler.js'></script>
    <script src='rc-classes.js'></script>
    <script src='rc-instruction-set.js'></script>
    <script src='rc-instruction.js'></script>

    <script src='ui-common.js'></script>

    <script>

        var programs = []
        var zeus

        function init() {
            zeus = new Zeus()

            const self = this
            zeus.on_log = function (msg) {
                self.log(msg)
            }

            // listen to messages from parent window
            window.addEventListener('message', message_handler, false)
        }

        function message_handler(event) {
            items = event.data.split('::')
            action = items.shift(0)

            switch (action) {
                case 'load':
                    load_warriors(items)
                    break
            }
        }

        function load_warriors(warriors) {
            const names = []

            zeus.reset()

            programs = []

            warriors.forEach(base64 => {
                code = atob(base64)

                zeus.load_code(code)
            })

            zeus.validate_programs()
        }

        function log(text) {
            const l = document.getElementById('log')
            l.innerHTML += text + '<br>'

            // force redraw
            const d = l.style.display
            const q = l.offsetHeight
            l.offsetHeight += 1
            l.style.display = 'none'
            l.style.display = d
        }

        function run() {
            const start = performance.now()
            const cycles = zeus.run()
            const duration = ~~(performance.now() - start)
            const mips = ~~((cycles / 10) / duration) / 100

            log(`\nRan ${cycles} cycles in ${duration} ms, ${mips} MIPS.`)
        }

        function clear_log() {
            document.getElementById('log').innerHTML = '';
        }

    </script>
</head>

<body onload='init()'>

    <div class='top light'>

        <div class='left30 light padded'>

            <table>
                <tr>
                    <td>
                        <label for='num-cycles'>Max. number of cycles</label>
                    </td>
                    <td>
                        <input type='number' id='num-cycles' value='80000'>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=''>Number of rounds</label>
                    </td>
                    <td>
                        <input type='number' id='' value='10'>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=''>Core size</label>
                    </td>
                    <td>
                        <input type='number' id='' value='4000'>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=''>Max. code length</label>
                    </td>
                    <td>
                        <input type='number' id='' value='100'>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=''>P-space size</label>
                    </td>
                    <td>
                        <input type='number' id='' value='500'>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for=''>Max. processes</label>
                    </td>
                    <td>
                        <input type='number' id='' value='128'>
                    </td>
                </tr>
            </table>

        </div>

        <div class='v-spacer'></div>

        <div>
            <pre id='log' class='padded code'><b>nCODE IDE v0.1 MATCH CONSOLE</b><br></pre>
        </div>

    </div>

    <div class='toolbar'>
        <input type='button' value='RUN' onclick='run()'>
        <input type='button' value='DEFAULT PARAMETERS' onclick=''>
        <input type='button' value='CLEAR LOG' onclick='clear_log()' class='right'>
    </div>


</body>

</html>