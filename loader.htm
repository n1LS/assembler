<html>

<head>
    <link href='https://fonts.googleapis.com/css?family=Overpass+Mono' rel='stylesheet'>
    <link rel="stylesheet" type="text/css" href="style/style.css" media="screen" />

    <style>
        #code {
            overflow: scroll;
            background-color: #202020;
            height: calc(100% - 16px);
        }

        li {
            padding-left: 16px;
            list-style-type: none;
        }

        li:hover {
            background: #505050;
            color: #eeeeee;
        }

        .listing {
            background: #404040;
        }

        .leftAuto {
            width: auto;
        }
    </style>

    <script>

        var selected = []
        var code = []
        var current_selection = null
        var current_code = null

        function copy() {
            var aux = document.createElement('input')
            aux.setAttribute('value', document.getElementById('code').innerText)
            document.body.appendChild(aux)
            aux.select()
            document.execCommand('copy')
            document.body.removeChild(aux)
        }

        function add(item, source) {
            if (selected.includes(item)) {
                return
            }

            selected.push(item)

            load(item, function(data) {
                code[item] = data;
                show(item)
            })

            list_selected()
        }

        function list_selected() {
            var html = make_ul(selected, 'select', true)
            document.getElementById('selection-list').innerHTML = html
        }

        function remove(item) {
            current_selection = item
            selected.splice(selected.indexOf(item), 1)

            var html = make_ul(selected, 'select')
            document.getElementById('selection-list').innerHTML = html
        }

        function load(item, action) {
            item = item.split(':')
            
            const source = item[0]
            const name = item[1]

            if (source === 'REMOTE') {
                var url = 'https://raw.githubusercontent.com/n1LS/assembler/master/warriors/' + name;
                var file = new XMLHttpRequest();

                file.onreadystatechange = function () {

                    if (file.readyState == 4 && file.status == 200) {
                        action(file.responseText)
                    }
                }

                file.open('GET', url, true);
                file.send();
            }
            else {
                action(localStorage.getItem(name))
            }
        }

        function show(item) {
            load(item, function(data) {
                current_code = data;

                const lines = data.split('\n')
                    const n_len = ('' + lines.length).length
                    var html = ''

                    for (var i = 0; i < lines.length; i++) {
                        html += `${(''+(1+i)).padStart(n_len)}  ${lines[i]}\n`
                    }
                    
                    document.getElementById('code').innerText = html

            })
        }

        function select(item) {
            if (current_selection === item) {
                remove(item)
            }
            else {
                show(item)
                current_selection = item
            }
        }

        function make_ul(items, function_name, show_source) {
            var s = '<ul>'

            for (var i = 0; i < items.length; i++) {
                const texts = items[i].split(':')
                const name = texts[1]
                const source = texts[0]
                var src = show_source ? `<span class='right small'>${source}</span>` : ''
                s += (`<li onclick='${function_name}("${items[i]}")'>ðŸ¤– ${name}${src}</li>`)
            }

            s += '</ul>'

            return s
        }

        function load_remote_warriors() {
            // load remote warriors
            setTimeout(function () {
                var url = 'https://raw.githubusercontent.com/n1LS/assembler/master/warriors/listing.txt';
                var file = new XMLHttpRequest();

                file.onreadystatechange = function () {

                    if (file.readyState == 4 && file.status == 200) {
                        var items = file.responseText.split('\n').map(x => x = 'REMOTE:' + x)
                        document.getElementById('public').innerHTML = make_ul(items, 'add', false)
                    }
                }

                file.open('GET', url, true);
                file.send();
            }, 1)
        }

        function launch() {
            // get the code for all selected warriors
            s = []

            for (var i = 0; i < selected.length; i++) {
                const c = code[selected[i]]
                const b64 = btoa(c)
                s.push(b64)
            }
            
            const all = s.join('::')
            window.parent.postMessage('debugger::launch::' + all, '*')
        }

        function load_local_warriors() {
            // load local warriors
            var items = []

            for (var i = 0; i < localStorage.length; i++) {
                var key = localStorage.key(i)

                if (key.startsWith('#WRRR_')) {
                    items.push(key)
                }
            }

            items = items.map(x => x = 'LOCAL:' + x)

            document.getElementById('local').innerHTML = make_ul(items, 'add', false)
        }

        function load_listings() {
            window.addEventListener('message', message_handler, false)

            load_remote_warriors();
            load_local_warriors();
        }

        
        function message_handler(event) {
            console.log('loader received: ' + event.data)
        }

        function remove_all() {
            code = []
            selected = []

            list_selected()
        }

        function move_to_assembler() {
            window.parent.postMessage('assembler::load::' + btoa(current_code), '*')
        }

    </script>
</head>

<body onload='load_listings()'>

    <div class='top'>

        <div class='left30 light padded'>

            <div>ðŸ“‚ Public warriors:</div>
            <span id='public'></span>

            <div>ðŸ“‚ Local:</div>
            <span id='local'></span>

            <div>ðŸ“‚ Selected:
                <span class='right clickable' onclick='remove_all()'>remove all</span>
            </div>
            <span id='selection-list'></span>
        </div>

        <div class='v-spacer'></div>

        <div class='leftAuto'>
            <pre id='code' class='padded'></pre>
        </div>

        <div class='toolbar'>
            <input type='button' value='copy to clipboard' onclick='copy()'>
            <input type='button' value='load selected' onclick='launch()'>
            <input type='button' value='source to assembler' onclick='move_to_assembler()'>
        </div>
</body>

</html>