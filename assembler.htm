<html>

<head>
    <link href='https://schickt.de/font/px8x8.css' rel='stylesheet'>
    <link rel="stylesheet" type="text/css" href="style/style.css" media="screen" />

    <style>
        .gray {
            color: gray;
        }

        #container-top {
            height: 75vh;
            max-height: 75vh;
            width: 100vw;
            overflow: hidden;
        }

        #editor,
        #editor-nol,
        #assembler_output,
        #preprocessor_output {
            height: calc(75vh - 16px);
            max-height: calc(75 - 16px);
        }

        #editor-nol {
            float: left;
            width: 40px;
            text-align: right;
            padding-right: 8px;
        }

        #blank-out {
            bottom: 25%;
            width: 48px;
            height: 12px;
            background: #202020;
            position: absolute;
        }

        #preprocessor_output {
            overflow: scroll;
            width: 100%;
        }

        #editor {
            overflow: scroll;
            white-space: nowrap;
            width: calc(100% - 48px);
        }

        #assembler_output {
            overflow: scroll;
            width: 100%;
        }

        #log {
            clear: both;
            height: calc(25% - 30px); /* oddness */
            overflow: scroll;
            background: #101010;
        }

        .local-width {
            width: calc(20% - 16px);
        }

    </style>

    <script src='rc-core.js'></script>
    <script src='rc-math.js'></script>
    <script src='rc-instruction-set.js'></script>
    <script src='rc-address-modes.js'></script>
    <script src='rc-preprocessor.js'></script>
    <script src='rc-assembler.js'></script>
    <script src='rc-classes.js'></script>
    <script src='rc-instruction.js'></script>

    <script src='ui-common.js'></script>

    <script>

        var modified = false
        var environment = new Environment()

        function preprocess() {
            var code = document.getElementById('editor').value
            var prepro = new Preprocessor()
            var output = prepro.preprocess(code, environment)

            var content = number_text(output.verbose_code, true)
            document.getElementById('preprocessor_output').innerHTML = content

            html = '<span class="gray">'

            if (output.errors.length) {
                html += `<b>PREPROCESSOR ERRORS:</b>\n${output.errors.join('\n').html()}</b>\n\n`
            }

            if (output.warnings.length) {
                html += `<i>PREPROCESSOR WARNINGS:</i>\n${output.warnings.join('\n').html()}`
            }

            html += '</span>'

            document.getElementById('log').innerHTML = html

            return output
        }

        function assemble(code) {
            var assembler = new Assembler()
            var output = assembler.assemble(code, environment)
            var content = number_text(output.listing, false)

            document.getElementById('assembler_output').innerHTML = content

            var html = '<br><span class="gray">'

            if (output.errors.length) {
                html += `\n<b>ASSEMBLER ERRORS:</b>\n${output.errors.join('\n').html()}</b>\n\n`
            }

            if (output.warnings.length) {
                html += `<i>ASSEMBLER WARNINGS:</i>\n${output.warnings.join('\n').html()}`
            }

            html += '</span>'

            document.getElementById('log').innerHTML += html

            return output
        }

        function changed() {
            var p = preprocess()

            if (p.errors.length == 0) {
                var a = assemble(p.code)

                if (a.errors.length == 0) {
                    modified = true
                    document.getElementById('log').innerHTML +=
                        '<span class="yay">ASSEMBLED SUCCESSFULLY.</span><br>'
                }

                document.getElementById('save_button').hidden = (a.errors.length > 0)
            } else {
                document.getElementById('assembler_output').innerHTML =
                    '<b>Preprocessor errors prevented assembly.</b>'
                document.getElementById('save_button').hidden = true
            }

            renumber_lines()
        }

        function renumber_lines() {
            var n = document.getElementById('editor').value.split('\n').length
            var s = ''

            for (var i = 1; i <= n; i++) {
                if (i % 10 == 0) {
                    s += `<div>${i}</div>`
                }
                else {
                    s += `${i}<br>`
                }
            }

            document.getElementById('editor-nol').innerHTML = s
        }

        function save() {
            var code = document.getElementById('editor').value
            var name = document.getElementById('name').value
            name = '#WRRR_' + name.replace(/ /g, '_')

            localStorage.setItem(name, code)

            document.getElementById('save_button').hidden = true
        }

        function scrolled() {
            var y = document.getElementById('editor')
            var e = document.getElementById('editor-nol')
            e.style.height = y.scrollHeight
            e.style.marginTop = `-${y.scrollTop}px`
        }

        function init() {
            // listen to messages from parent window
            window.addEventListener('message', message_handler, false)

            changed()
        }

        function debug() {
            const code = btoa(document.getElementById('editor').value)

            window.parent.postMessage(`debugger::launch::${code}`, '*')
        }

        function message_handler(event) {
            items = event.data.split('::')
            action = items.shift(0)

            switch (action) {
                case 'load':
                    document.getElementById('editor').value = atob(items[0])
                    changed()
                    break

                case 'environment':
                    environment = JSON.parse(atob(items[0]))
                    changed()
                    break
            }
        }

    </script>

</head>

<body onload='init()'>

    <div class='top' style='background:red;'>

        <div id='container-top' class='code'>
            <div class='left50'>
                <h1>Source code</h1>
                <div id='editor-nol' class='code num'></div>
                <div id='blank-out' class='code'></div>
                <textarea id='editor' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='code' onkeyup='changed()'
                    onscroll='scrolled()'>
;redcode-88
;author your_name_here
        org start
start   mov $1,     $1
dummy   dat #0,     #0</textarea>
            </div>

            <div class='v-spacer'></div>
            
            <div class='left30'>
                <h1>Preprocessor output / Load file</h1>
                <pre id='preprocessor_output' class='code'>preprocessor output</pre>
            </div>

            <div class='v-spacer'></div>

            <div class='left local-width'>
                <h1>Assembly listing</h1>
                <pre id='assembler_output' class='code'>assembler output</pre>
            </div>

        </div>

        <pre id='log'></pre>

    </div>

    <div class='toolbar'>
        <input type='button' value='ASSEMBLE' onclick='changed()'>
        <input type='button' value='WRITE TO LOCAL STORAGE' onclick='save()' id='save_button'>
        <input type='text' placeholder='WARRIOR NAME' id='name'>
        <input type='button' value='SELECTED to DEBUGGER' onclick='debug()' class='right'>
    </div>

</body>

</html>